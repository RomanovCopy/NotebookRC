<Window x:Class="NotebookRCv001.Views.FileOverview"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:viewmodels="clr-namespace:NotebookRCv001.ViewModels"
        xmlns:converters="clr-namespace:NotebookRCv001.Converters"
        xmlns:controls="clr-namespace:NotebookRCv001.MyControls" 
        xmlns:customized="clr-namespace:NotebookRCv001.Styles.CustomizedWindow"
        xmlns:local="clr-namespace:NotebookRCv001.Views"
        mc:Ignorable="d"
        Style="{StaticResource ScriptEditorStyle}"
        Name="window"
        MinHeight="250" 
        MinWidth="600" HorizontalContentAlignment="Stretch">
    <Window.Resources>
        <ResourceDictionary>
            <converters:SizeLocationConverter x:Key="sizeconverter"/>
            <viewmodels:FileOverviewViewModel x:Key="viewmodel"/>
            <converters:ColumnsWidthConverter x:Key="columnswidth"/>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource viewmodel}"/>
    </Window.DataContext>
    <Window.Width>
        <Binding Path="WindowWidth" Converter="{StaticResource sizeconverter}" 
                 ConverterParameter="width" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Width>
    <Window.Height>
        <Binding Path="WindowHeight" Converter="{StaticResource sizeconverter}" 
                 ConverterParameter="height" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Height>
    <Window.Top>
        <Binding Path="WindowTop" Converter="{StaticResource sizeconverter}" ConverterParameter="top" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Top>
    <Window.Left>
        <Binding Path="WindowLeft" Converter="{StaticResource sizeconverter}" ConverterParameter="left" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Left>
    <Window.Title>
        <Binding Path="Headers[0]" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Title>
    <Window.WindowState>
        <Binding Path="WindowState" Converter="{StaticResource sizeconverter}" 
                 ConverterParameter="state" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.WindowState>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" BorderBrush="White" BorderThickness="1" CornerRadius="10" Background="Gray">
            <GroupBox HorizontalContentAlignment="Stretch" >
                <GroupBox.Header>
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox x:Name="drives"  Grid.Column="0" ItemsSource="{Binding DriveInfos, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding ComboBoxLoaded, UpdateSourceTrigger=PropertyChanged}"
                                                           CommandParameter="{Binding ElementName=drives, UpdateSourceTrigger=PropertyChanged}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding ComboBoxSelectionChanged, UpdateSourceTrigger=PropertyChanged}"
                                                           CommandParameter="{Binding ElementName=drives, Path=SelectedItem, 
                                        UpdateSourceTrigger=PropertyChanged}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <Button Grid.Column="1" Width="24" Height="24" Template="{StaticResource FlatButtonControlTemplate}"
                                Command="{Binding ToParentDirectory, UpdateSourceTrigger=PropertyChanged}">
                            <Image Source="{StaticResource fileOverviewUp}" Stretch="None" SnapsToDevicePixels="True" />
                        </Button>
                        <Border Grid.Column="2" BorderBrush="White" BorderThickness="1" CornerRadius="10" >
                            <TextBlock Height="20" Text="{Binding CurrentDirectoryFullName , UpdateSourceTrigger=PropertyChanged}" 
                                   Width="450" Margin="10,0,10,0" />
                        </Border>
                    </Grid>
                </GroupBox.Header>
                <ListView x:Name="list" ItemsSource="{Binding CurrentDirectoryList, UpdateSourceTrigger=PropertyChanged}" 
                          HorizontalAlignment="Stretch" Focusable="True" VirtualizingPanel.IsVirtualizing="True" 
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="{Binding Headers[1], UpdateSourceTrigger=PropertyChanged}" 
                                            Width="{Binding ListView_ColumnsWidth[0], Converter={StaticResource columnswidth}, 
                                Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Foreground="White"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{Binding Headers[2], UpdateSourceTrigger=PropertyChanged}"
                                            Width="{Binding ListView_ColumnsWidth[1], Converter={StaticResource columnswidth}, 
                                Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=FileExtension, UpdateSourceTrigger=PropertyChanged}" Foreground="White"
                                                   TextAlignment="Center"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{Binding Headers[3], UpdateSourceTrigger=PropertyChanged}" 
                                            Width="{Binding ListView_ColumnsWidth[2], Converter={StaticResource columnswidth}, 
                                Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Size, UpdateSourceTrigger=PropertyChanged}" Foreground="White"
                                                   TextAlignment="Center"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="" Width="{Binding ListView_ColumnsWidth[3], Converter={StaticResource columnswidth}, 
                                ConverterParameter=last, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="" Foreground="White"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ListView_SelectionChanged, UpdateSourceTrigger=PropertyChanged}"
                                                   CommandParameter="{Binding ElementName=list, Path=SelectedItem, UpdateSourceTrigger=PropertyChanged}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>
            </GroupBox>
        </Border>
    </Grid>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="SizeChanged">
            <i:InvokeCommandAction Command="{Binding WindowSizeChanged, UpdateSourceTrigger=PropertyChanged}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{ Binding WindowClosing, UpdateSourceTrigger=PropertyChanged}" 
                                   CommandParameter="{Binding ElementName=window}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoaded, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding ElementName=window, UpdateSourceTrigger=PropertyChanged}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Window>
