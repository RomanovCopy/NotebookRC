<Page x:Class="NotebookRCv001.Views.FlowDocumentReader"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:helpers="clr-namespace:NotebookRCv001.Helpers" 
      xmlns:viewmodels="clr-namespace:NotebookRCv001.ViewModels" 
      xmlns:mycontrols="clr-namespace:NotebookRCv001.MyControls"
      xmlns:local="clr-namespace:NotebookRCv001.Views" 
      mc:Ignorable="d" 
      x:Name="page"
      Title="Reader">
    <Page.Resources>
        <viewmodels:FlowDocumentReaderViewModel x:Key="viewmodel"/>
        <mycontrols:ButtonsClearAndClose x:Key="clearandclose"/>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>
    <Page.DataContext>
        <Binding Source="{StaticResource viewmodel}"/>
    </Page.DataContext>
    <Grid Background="Gray">
        <Grid.RowDefinitions>
            <RowDefinition x:Name="formenu" Height="Auto"/>
            <RowDefinition x:Name="fortoolbar" Height="Auto"/>
            <RowDefinition x:Name="forreader" Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="Black">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="menuhere" Width="Auto"/>
                <ColumnDefinition x:Name="textblockhere" Width="*"/>
                <ColumnDefinition x:Name="buttoshere" Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Menu Grid.Column="0">
                <MenuItem Header="{Binding Headers[0], UpdateSourceTrigger=PropertyChanged}" >
                    <MenuItem x:Name="openfile" Header="{Binding Headers[2], UpdateSourceTrigger=PropertyChanged}" 
                              ToolTip="{Binding ToolTips[2], UpdateSourceTrigger=PropertyChanged}"
                              Command="{Binding OpenFile, UpdateSourceTrigger=PropertyChanged}"/>
                    <MenuItem x:Name="editfile" Header="{Binding Headers[6], UpdateSourceTrigger=PropertyChanged}" 
                              ToolTip="{Binding ToolTips[6], UpdateSourceTrigger=PropertyChanged}"
                              Command="{Binding EditFile, UpdateSourceTrigger=PropertyChanged}"/>
                </MenuItem>
            </Menu>
            <TextBlock Text=""  TextAlignment="Center" Background="Transparent" Grid.Column="1" />
            <ContentPresenter Content="{Binding Source={StaticResource clearandclose}}" Grid.Column="2" />
        </Grid>
        <Border  Margin="20,5,20,5" BorderBrush="Black" BorderThickness="1,1,1,1" Grid.Row="2" >
            <FlowDocumentReader x:Name="reader"  
                     TextOptions.TextFormattingMode="Display" 
                     TextOptions.TextRenderingMode="Auto"
                     ContextMenu="{StaticResource mycontextmenu}"
                                MinZoom="10"
                                MaxZoom="200">
                <i:Interaction.Behaviors>
                    <helpers:BehaviorFlowDocumentReader x:Name="readerbehavior"/>
                </i:Interaction.Behaviors>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction 
                        Command="{Binding ReaderLoaded}" CommandParameter="{Binding ElementName=readerbehavior}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </FlowDocumentReader>
        </Border>
    </Grid>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding PageLoaded}" CommandParameter="{Binding ElementName=page}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Page>
