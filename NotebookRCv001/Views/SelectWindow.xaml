<Window x:Class="NotebookRCv001.Views.SelectWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodel="clr-namespace:NotebookRCv001.ViewModels"
        xmlns:converters="clr-namespace:NotebookRCv001.Converters"
        xmlns:local="clr-namespace:NotebookRCv001.Views"
        mc:Ignorable="d" x:Name="window"
        Style="{StaticResource ParameterEntryStyle}">
    <Window.Resources>
        <ResourceDictionary>
            <converters:SizeLocationConverter x:Key="sizeconverter"/>
            <viewmodel:SelectWindowViewModel x:Key="viewmodel"/>
            <Style TargetType="Button" x:Key="buttonsselect">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="button" CornerRadius="5" 
                                    Background="Gray"
                                    BorderThickness="1"
                                    BorderBrush="Black">
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.5"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource viewmodel}"/>
    </Window.DataContext>
    <Window.Title>
        <Binding Path="Title" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Title>
    <Window.Width>
        <Binding Path="WindowWidth" Converter="{StaticResource sizeconverter}" 
                 ConverterParameter="width" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Width>
    <Window.Height>
        <Binding Path="WindowHeight" Converter="{StaticResource sizeconverter}" 
                 ConverterParameter="height" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Height>
    <Window.Top>
        <Binding Path="WindowTop" Converter="{StaticResource sizeconverter}" 
                 ConverterParameter="top" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Top>
    <Window.Left>
        <Binding Path="WindowLeft" Converter="{StaticResource sizeconverter}" 
                 ConverterParameter="left" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Left>
    <Window.WindowState>
        <Binding Path="WindowState" Converter="{StaticResource sizeconverter}" 
                 ConverterParameter="state" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.WindowState>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="formessage" Height="*"/>
            <RowDefinition x:Name="forbuttons" Height="Auto"/>
        </Grid.RowDefinitions>
        <Border x:Name="message" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="20" CornerRadius="10" BorderBrush="Black"
                BorderThickness="2" Background="Gray" Grid.Row="0">
            <TextBlock x:Name="message1" Text="{Binding Message, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                       HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black" FontStyle="Italic" FontSize="16"/>
        </Border>
        <Border x:Name="buttons" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="5" CornerRadius="10" BorderBrush="Black"
                BorderThickness="2" Background="Gray" Grid.Row="1">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="forleftbutton" />
                    <ColumnDefinition x:Name="forcenterbutton"/>
                    <ColumnDefinition x:Name="forrightbutton" />
                </Grid.ColumnDefinitions>
                <Button x:Name="leftbutton" Grid.Column="0" Style="{StaticResource buttonsselect}"
                        Content="{Binding LeftButtonContent, UpdateSourceTrigger=PropertyChanged}"
                        Command="{Binding ButtonsClick, UpdateSourceTrigger=PropertyChanged}"
                        CommandParameter="{Binding ElementName=leftbutton}"/>

                <Button x:Name="centerbutton" Grid.Column="1" Style="{StaticResource buttonsselect}"
                        Content="{Binding CenterButtonContent, UpdateSourceTrigger=PropertyChanged}"
                        Command="{Binding ButtonsClick, UpdateSourceTrigger=PropertyChanged}"
                        CommandParameter="{Binding ElementName=centerbutton}"/>

                <Button x:Name="rightbutton" Grid.Column="2" Style="{StaticResource buttonsselect}"
                        Content="{Binding RightButtonContent, UpdateSourceTrigger=PropertyChanged}"
                        Command="{Binding ButtonsClick, UpdateSourceTrigger=PropertyChanged}"
                        CommandParameter="{Binding ElementName=rightbutton}"/>
            </Grid>
        </Border>

    </Grid>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoaded, UpdateSourceTrigger=PropertyChanged}" 
                                   CommandParameter="{Binding ElementName=window}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosing, UpdateSourceTrigger=PropertyChanged}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Window>
