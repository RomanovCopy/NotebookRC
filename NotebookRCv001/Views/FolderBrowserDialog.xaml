<Window x:Class="NotebookRCv001.Views.FolderBrowserDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:NotebookRCv001.Converters"
        xmlns:viewmodels="clr-namespace:NotebookRCv001.ViewModels"
        xmlns:helpers="clr-namespace:NotebookRCv001.Helpers"
        xmlns:customized="clr-namespace:NotebookRCv001.Styles.CustomizedWindow" 
        xmlns:local="clr-namespace:NotebookRCv001.Views"
        Style="{StaticResource ParameterEntryStyle}"
        mc:Ignorable="d" 
        Name="window">
    <Window.Resources>
        <ResourceDictionary>
            <viewmodels:FolderBrowserDialogViewModel x:Key="viewmodel"/>
            <converters:SizeLocationConverter x:Key="size"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource VS2012WindowStyleTitleBarButton}">
                <Setter Property="Focusable" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border
                                    x:Name="PART_border"
                                    Background="#FFF"
                                    Opacity="0.75"
                                    CornerRadius="5"
                                    BorderBrush="Black"
                                    BorderThickness="1"
                                    Padding="0,5,0,5"
                                    Height="20"
                            />
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_border" Property="Background" Value="#FFF" />
                                    <Setter TargetName="PART_border" Property="Opacity" Value="0.5" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="PART_border" Property="Background" Value="{StaticResource VS2012WindowBorderBrush}"/>
                                    <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                                    <Setter Property="Foreground" Value="#FFF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource viewmodel}"/>
    </Window.DataContext>
    <Window.Title >
        <Binding Path="Headers[0]" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Title>
    <Window.ToolTip>
        <Binding Path="ToolTips[0]" UpdateSourceTrigger="PropertyChanged"/>
    </Window.ToolTip>
    <Window.Width>
        <Binding Path="WindowWidth" Converter="{StaticResource size}" ConverterParameter="width" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Width>
    <Window.Height>
        <Binding Path="WindowHeight" Converter="{StaticResource size}" ConverterParameter="height" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Height>
    <Window.Top>
        <Binding Path="WindowTop" Converter="{StaticResource size}" ConverterParameter="top" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Top>
    <Window.Left>
        <Binding Path="WindowLeft" Converter="{StaticResource size}" ConverterParameter="left" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Window.Left>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TreeView Name="treeview" Grid.Row="0" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding TreeViewLoaded, UpdateSourceTrigger=PropertyChanged}"
                                           CommandParameter="{Binding ElementName=behavior, UpdateSourceTrigger=PropertyChanged}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <i:Interaction.Behaviors>
                <helpers:BehaviorTreeView x:Name="behavior"/>
            </i:Interaction.Behaviors>
        </TreeView>
        <Grid Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button x:Name="newdirectory" Content="{Binding Headers[1], UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" 
                    ToolTip="{Binding ToolTips[1], UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickNewDirectory, UpdateSourceTrigger=PropertyChanged}"/>
            <Button x:Name="accept" Content="{Binding Headers[2], UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" 
                    ToolTip="{Binding ToolTips[2], UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickAccept, UpdateSourceTrigger=PropertyChanged}"/>
            <Button x:Name="cancel" Content="{Binding Headers[3], UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" 
                    ToolTip="{Binding ToolTips[3], UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickCancel, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <Button x:Name="minimizealldrives" Content="{Binding Headers[4], UpdateSourceTrigger=PropertyChanged}" Grid.Row="2"
                    ToolTip="{Binding ToolTips[4], UpdateSourceTrigger=PropertyChanged}"
                Command="{Binding ClickMinimizeAllDrives, UpdateSourceTrigger=PropertyChanged}"/>
    </Grid>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding FolderBrowserDialogLoaded, UpdateSourceTrigger=PropertyChanged}" 
                                   CommandParameter="{Binding ElementName=window}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding FolderBrowserDialogClosing, UpdateSourceTrigger=PropertyChanged}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Window>
