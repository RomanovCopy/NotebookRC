<ResourceDictionary 
    x:Class="NotebookRCv001.Styles.CustomizedWindow.VS2012WindowStyle"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:navigate="clr-namespace:NotebookRCv001.Styles.CustomizedWindow"
    xmlns:helpers="clr-namespace:NotebookRCv001.Helpers"
    xmlns:res="clr-namespace:NotebookRCv001.Resources"
    xmlns:viewmodels="clr-namespace:NotebookRCv001.ViewModels"
    xmlns:converters="clr-namespace:NotebookRCv001.Converters"
    xmlns:infra="clr-namespace:NotebookRCv001.Infrastructure">


    <navigate:NavigateService x:Key="navigateservice"/>
    <viewmodels:MyContextMenuViewModel x:Key="mycontextmenuviewmodel"/>
    <converters:ColorToColorConverter x:Key="colorconvert"/>


    <!--#region *************** IMAGES **************** -->
    
    <BitmapImage x:Key="iconimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Icons[0]}"/>
    <BitmapImage x:Key="aligncenterimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[0]}"/>
    <BitmapImage x:Key="alignjustifyimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[1]}"/>
    <BitmapImage x:Key="alignleftimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[2]}"/>
    <BitmapImage x:Key="alignrightimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[3]}"/>
    <BitmapImage x:Key="backimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[4]}"/>
    <BitmapImage x:Key="codeblockimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[5]}"/>
    <BitmapImage x:Key="codeinlineimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[6]}"/>
    <BitmapImage x:Key="editcopyimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[7]}"/>
    <BitmapImage x:Key="editcutimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[8]}"/>
    <BitmapImage x:Key="editpasteimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[9]}"/>
    <BitmapImage x:Key="editredoimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[10]}"/>
    <BitmapImage x:Key="editundoimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[11]}"/>
    <BitmapImage x:Key="filesaveimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[12]}"/>
    <BitmapImage x:Key="fontboldimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[13]}"/>
    <BitmapImage x:Key="fontgrowimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[14]}"/>
    <BitmapImage x:Key="fontitalicimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[15]}"/>
    <BitmapImage x:Key="fontshrinkimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[16]}"/>
    <BitmapImage x:Key="fontunderlineimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[17]}"/>
    <BitmapImage x:Key="forwardimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[18]}"/>
    <BitmapImage x:Key="indentdecreaseimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[20]}"/>
    <BitmapImage x:Key="indentincreaseimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[21]}"/>
    <BitmapImage x:Key="listbulletsimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[22]}"/>
    <BitmapImage x:Key="listnumbersimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[23]}"/>
    <BitmapImage x:Key="normaltextimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[24]}"/>
    <BitmapImage x:Key="pauseimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[25]}"/>
    <BitmapImage x:Key="reloadimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[26]}"/>
    <BitmapImage x:Key="separatorimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[27]}"/>
    <BitmapImage x:Key="startimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[28]}"/>
    <BitmapImage x:Key="stopimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[29]}"/>
    <BitmapImage x:Key="reloadminiimage" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[30]}"/>
    <BitmapImage x:Key="linespacingdecrease" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[31]}"/>
    <BitmapImage x:Key="linespacingincrease" UriSource="{Binding Source={StaticResource navigateservice}, Path=Images[32]}"/>
    
    
    <!--#endregion-->



    <!--#region ************************ COLORS ****************************-->

    <SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="Black" />
    <SolidColorBrush x:Key="VS2012WindowBorderBrush" Color="White" />
    <SolidColorBrush x:Key="VS2012WindowBorderBrushInactive" Color="#999999" />
    <SolidColorBrush x:Key="VS2012WindowStatusForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="VS2012WindowStatusForegroundInactive" Color="#FFFFFF" />

    <!--Control colors.-->
    <Color x:Key="WindowColor">Black</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">Gray</Color>
    <Color x:Key="ControlDarkColor">Black</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                    Offset="0" />
                <GradientStop Color="#600000FF"
                    Offset="0.4" />
                <GradientStop Color="#600000FF"
                    Offset="0.6" />
                <GradientStop Color="#000000FF"
                    Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <!--#endregion-->


    <!--#region ************************** WINDOWS ****************************************-->


    <Style x:Key="VS2012WindowStyleTitleBarButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="#FFF"
                            Opacity="0.75"
                            CornerRadius="3"
                            />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="#FFF" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{StaticResource VS2012WindowBorderBrush}"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2012WindowStyleNavigationButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="Gray"
                            Opacity="1"
                            CornerRadius="3"
                            />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Margin" Value="0,0,3,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Width="18" Height="18"
                            Background="#FFF"
                            Opacity="0.5"
                            TextBlock.Foreground="Black"
                            TextBlock.FontWeight="DemiBold"
                            CornerRadius="3"/>
                        <ContentPresenter
                            Content="C"
                            TextBlock.FontWeight="DemiBold"
                            HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="#FFF" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.35" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="#FFF"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.5" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Margin" Value="0,0,3,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Width="18" Height="18"
                            Background="#FFF"
                            Opacity="0.5"
                            CornerRadius="3"/>
                        <Grid MaxHeight="9" MaxWidth="9">
                            <Path 
                                Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                StrokeThickness="1.5"
                                Stretch="None"
                                Data="M0,0 L8,8 M0,8 L8,0"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="#FFF" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.35" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="#FFF"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.5" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2012WindowStyle_web_browser" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="#FFF"
                            Opacity="0.5"
                            Padding="10,0,10,0"
                            CornerRadius="5">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="#FFF" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.35" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="#FFF"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.5" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolTip" >
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="Content" Value="">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="VS2012WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid
                        Margin="1"
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display">
                        <Border
                            x:Name="PART_Border"
                            Width="Auto"
                            Height="Auto"
                            Background="Transparent"
                            BorderBrush="{StaticResource VS2012WindowBorderBrush}"
                            BorderThickness="0"
                            Padding="0">
                            <Border.Effect>
                                <DropShadowEffect
                                    Color="black"
                                    Opacity="0.5"
                                    BlurRadius="7"
                                    ShadowDepth="2"
                                    Direction="315"/>
                            </Border.Effect>
                            <DockPanel   
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                VerticalAlignment="Stretch"
                                >
                                <Border
                                    x:Name="TitleBar"
                                    DockPanel.Dock="Top"
                                    Background="{StaticResource TitleBarBackgroundBrush}"
                                    BorderThickness="0"
                                    MouseLeftButtonDown="TitleBarMouseLeftButtonDown"
                                    MouseMove="TitleBarMouseMove"
                                    Opacity="0.5"
                                    >
                                    <Grid Height="Auto">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <!--Button Back-->
                                            <ColumnDefinition Width="Auto"/>
                                            <!--Button Forward-->
                                            <ColumnDefinition Width="Auto"/>
                                            <!--Icon-->
                                            <ColumnDefinition Width="Auto"/>
                                            <!--Title-->
                                            <ColumnDefinition Width="Auto"/>
                                            <!--ComboBox-->
                                            <ColumnDefinition Width="*"/>
                                            <!--CurrentPath-->
                                            <ColumnDefinition Width="*"/>
                                            <!--Search-->
                                            <ColumnDefinition Width="24"/>
                                            <!--Button MinSize-->
                                            <ColumnDefinition Width="24"/>
                                            <!--Button MaxSize-->
                                            <ColumnDefinition Width="24"/>
                                            <!--Button Close-->
                                        </Grid.ColumnDefinitions>
                                        <Button
                                            x:Name="buttonBack" 
                                            DataContext="{StaticResource navigateservice}"
                                            Grid.Column="0"
                                            VerticalAlignment="Center"
                                            Width="18"
                                            Height="18"
                                            Command="{Binding NavigateButton_Click, UpdateSourceTrigger=PropertyChanged}"
                                            CommandParameter="back"
                                            Style="{StaticResource VS2012WindowStyleNavigationButton}">
                                            <Image Source="{StaticResource backimage}"/>
                                        </Button>
                                        <Button
                                            x:Name="buttonForward" 
                                            DataContext="{StaticResource navigateservice}"
                                            Grid.Column="1"
                                            VerticalAlignment="Center"
                                            Width="18"
                                            Height="18"
                                            Command="{Binding NavigateButton_Click, UpdateSourceTrigger=PropertyChanged}"
                                            CommandParameter="forward"
                                            Style="{StaticResource VS2012WindowStyleNavigationButton}">
                                            <Image Source="{StaticResource forwardimage}"/>
                                        </Button>
                                        <Image
                                            x:Name="Icon"
                                            DataContext="{StaticResource navigateservice}"
                                            Grid.Column="2"
                                            Source="{StaticResource iconimage}" 
                                            HorizontalAlignment="Center"
                                            Margin="4,0,0,0"
                                            Width="24"
                                            Height="24"
                                            Opacity="1"
                                            />
                                        <TextBlock
                                            x:Name="Caption"
                                            Grid.Column="3"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            MinWidth="70"
                                            Margin="4,0,0,0"
                                            FontFamily="Segoe UI"
                                            FontSize="12"
                                            Opacity="1"
                                            Foreground="White"
                                            Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            />
                                        <ComboBox
                                            x:Name="pageName"
                                            DataContext="{StaticResource navigateservice}"
                                            ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged}"
                                            ToolTip="{Binding ToolTips[1], UpdateSourceTrigger=PropertyChanged}"
                                            SelectedValuePath="Content"
                                            MinWidth="150"
                                            Grid.Column="4"
                                            Margin="10,4,0,4"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            FontFamily="Segoe UI"        
                                            FontSize="12"
                                            FontWeight="Medium"
                                            Foreground="Black">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Loaded">
                                                    <i:InvokeCommandAction Command="{Binding ComboBoxLoaded, UpdateSourceTrigger=PropertyChanged}"
                                                                           CommandParameter="{Binding ElementName=behavior}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <i:Interaction.Behaviors>
                                                <helpers:BehaviorComboBox x:Name="behavior"/>
                                            </i:Interaction.Behaviors>
                                        </ComboBox>
                                        <TextBlock
                                            x:Name="currentpath"
                                            DataContext="{StaticResource navigateservice}"
                                            Text="{Binding LastFileName, UpdateSourceTrigger=PropertyChanged}"
                                            ToolTip="{Binding PathToLastFile, UpdateSourceTrigger=PropertyChanged}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            MinWidth="150"
                                            Margin="10,4,10,4"
                                            Grid.Column="5"
                                            TextWrapping="NoWrap"
                                            FontWeight="Medium"
                                            Foreground="White"
                                            FontSize="12"
                                            Opacity="1"/>
                                        <TextBox
                                            x:Name="search"
                                            DataContext="{StaticResource navigateservice}"
                                            Margin="10,4,10,4"
                                            ToolTip="{Binding ToolTips[0], UpdateSourceTrigger=PropertyChanged}"
                                            Grid.Column="6"
                                            VerticalContentAlignment="Center"
                                            VerticalAlignment="Center"
                                            TextWrapping="NoWrap"
                                            FontWeight="Medium"
                                            Foreground="White"
                                            FontSize="12"
                                            Opacity="1">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Loaded">
                                                    <i:InvokeCommandAction Command="{Binding TextBoxSearchLoaded, UpdateSourceTrigger=PropertyChanged}"
                                                                           CommandParameter="{Binding ElementName=search}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                        <Button
                                            x:Name="MinButton" 
                                            Grid.Column="7"
                                            VerticalAlignment="Center"
                                            Width="18"
                                            Height="18"
                                            Style="{StaticResource VS2012WindowStyleTitleBarButton}"
                                            Click="MinButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1"
                                                    Stretch="None"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Data="M0,8 H8 M0,7 H8 M0,6 H8"
                                                    />
                                            </Grid>
                                        </Button>
                                        <Button
                                            Grid.Column="8"
                                            x:Name="MaxButton" 
                                            VerticalAlignment="Center"
                                            Width="18"
                                            Height="18"
                                            Style="{StaticResource VS2012WindowStyleTitleBarButton}"
                                            Click="MaxButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    x:Name="PART_MaxButton_Path"
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1"
                                                    Stretch="None"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Data="M0,0 H8 V8 H0 V0 M0,1 H8 M0,2 H8"
                                                    />
                                            </Grid>
                                        </Button>
                                        <Button
                                            Grid.Column="9"
                                            x:Name="CloseButton" 
                                            VerticalAlignment="Center"
                                            Width="18"
                                            Height="18"
                                            Style="{StaticResource VS2012WindowStyleTitleBarButton}"
                                            Click="CloseButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1.5"
                                                    Stretch="None"
                                                    Data="M0,0 L8,8 M0,8 L8,0"
                                                    />
                                            </Grid>
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter />
                            </DockPanel>
                        </Border>
                        <Line
                            MouseDown="OnSizeNorth"
                            x:Name="lnSizeNorth"
                            Stroke="Transparent"   
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="1"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeSouth"
                            x:Name="lnSizeSouth"
                            Stroke="Transparent"
                            VerticalAlignment="Bottom" 
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="{TemplateBinding ActualHeight}" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeWest"
                            x:Name="lnSizeWest"
                            Stroke="Transparent"
                            Cursor="SizeWE"
                            X1="1" X2="1" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeEast"
                            x:Name="lnSizeEast"
                            Stroke="Transparent"
                            HorizontalAlignment="Right" 
                            Cursor="SizeWE"
                            X1="{TemplateBinding ActualWidth}" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Rectangle MouseDown="OnSizeNorthWest" x:Name="rectSizeNorthWest" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeNorthEast" x:Name="rectSizeNorthEast" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Right" />
                        <Rectangle MouseDown="OnSizeSouthWest" x:Name="rectSizeSouthWest" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeSouthEast" x:Name="rectSizeSouthEast" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_MaxButton_Path" Property="Data" Value="M0,3 H5 V8 H0 V3 M0,4 H5 M3,0 H8 V5 H7 M3,1 H8"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource VS2012WindowBorderBrushInactive}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Resources>
            <Style TargetType="{x:Type StatusBar}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource VS2012WindowStatusForeground}" />
                        <Setter Property="Background" Value="{StaticResource VS2012WindowBorderBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource VS2012WindowStatusForegroundInactive}" />
                        <Setter Property="Background" Value="{StaticResource VS2012WindowBorderBrushInactive}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>-->
    </Style>


    <Style x:Key="ParameterEntryStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid
                        Margin="7"
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display">
                        <Border
                            x:Name="PART_Border"
                            Width="Auto"
                            Height="Auto"
                            Background="Transparent"
                            BorderBrush="Black"
                            BorderThickness="1"
                            CornerRadius="10"
                            Padding="0">
                            <Border.Effect>
                                <DropShadowEffect
                                    Color="black"
                                    Opacity="0.5"
                                    BlurRadius="7"
                                    ShadowDepth="2"
                                    Direction="315"/>
                            </Border.Effect>
                            <DockPanel   
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                VerticalAlignment="Stretch"
                                >
                                <Border
                                    x:Name="TitleBar"
                                    DockPanel.Dock="Top"
                                    Background="{StaticResource TitleBarBackgroundBrush}"
                                    CornerRadius="10,10,0,0"
                                    BorderThickness="1"
                                    Opacity="0.5"
                                    MouseLeftButtonDown="TitleBarMouseLeftButtonDown"
                                    MouseMove="TitleBarMouseMove"
                                    >
                                    <Grid Height="24">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="32"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="24"/>
                                            <ColumnDefinition Width="24"/>
                                            <ColumnDefinition Width="24"/>
                                        </Grid.ColumnDefinitions>
                                        <Image
                                            x:Name="Icon"
                                            Grid.Column="0"
                                            Source="{Binding Path=Icon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                            HorizontalAlignment="Right"
                                            Margin="4,0,0,0"
                                            Width="24"
                                            Height="24"
                                            Opacity="1"
                                            MouseLeftButtonDown="IconMouseLeftButtonDown"
                                            />
                                        <TextBlock
                                            x:Name="Caption"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Margin="4,0,0,0"
                                            FontFamily="Segoe UI"
                                            FontSize="12"
                                            Opacity="1"
                                            Foreground="White"
                                            Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Button
                                            Grid.Column="4"
                                            x:Name="CloseButton" 
                                            VerticalAlignment="Top"
                                            Margin="3"
                                            Width="18"
                                            Height="18"
                                            Style="{StaticResource VS2012WindowStyleTitleBarButton}"
                                            Click="CloseButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1.5"
                                                    Stretch="None"
                                                    Data="M0,0 L8,8 M0,8 L8,0"
                                                    />
                                            </Grid>
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter />
                            </DockPanel>
                        </Border>
                        <Line
                            MouseDown="OnSizeNorth"
                            x:Name="lnSizeNorth"
                            Stroke="Transparent"   
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="1"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeSouth"
                            x:Name="lnSizeSouth"
                            Stroke="Transparent"
                            VerticalAlignment="Bottom" 
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="{TemplateBinding ActualHeight}" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeWest"
                            x:Name="lnSizeWest"
                            Stroke="Transparent"
                            Cursor="SizeWE"
                            X1="1" X2="1" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeEast"
                            x:Name="lnSizeEast"
                            Stroke="Transparent"
                            HorizontalAlignment="Right" 
                            Cursor="SizeWE"
                            X1="{TemplateBinding ActualWidth}" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Rectangle MouseDown="OnSizeNorthWest" x:Name="rectSizeNorthWest" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeNorthEast" x:Name="rectSizeNorthEast" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Right" />
                        <Rectangle MouseDown="OnSizeSouthWest" x:Name="rectSizeSouthWest" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeSouthEast" x:Name="rectSizeSouthEast" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource VS2012WindowBorderBrushInactive}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ScriptEditorStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid
                        Margin="7"
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display">
                        <Border
                            x:Name="PART_Border"
                            Width="Auto"
                            Height="Auto"
                            Background="Transparent"
                            BorderBrush="{StaticResource VS2012WindowBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="10"
                            Padding="0">
                            <Border.Effect>
                                <DropShadowEffect
                                    Color="black"
                                    Opacity="0.5"
                                    BlurRadius="7"
                                    ShadowDepth="2"
                                    Direction="315"/>
                            </Border.Effect>
                            <DockPanel   
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                VerticalAlignment="Stretch"
                                >
                                <Border
                                    x:Name="TitleBar"
                                    DockPanel.Dock="Top"
                                    Background="{StaticResource TitleBarBackgroundBrush}"
                                    CornerRadius="10"
                                    BorderThickness="0"
                                    Opacity="0.5"
                                    MouseLeftButtonDown="TitleBarMouseLeftButtonDown"
                                    MouseMove="TitleBarMouseMove"
                                    >
                                    <Grid Height="24">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="32"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="24"/>
                                            <ColumnDefinition Width="24"/>
                                            <ColumnDefinition Width="24"/>
                                        </Grid.ColumnDefinitions>
                                        <Image
                                            x:Name="Icon"
                                            Grid.Column="0"
                                            Source="{Binding Path=Icon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                            HorizontalAlignment="Right"
                                            Margin="4,0,0,0"
                                            Width="24"
                                            Height="24"
                                            Opacity="1"
                                            MouseLeftButtonDown="IconMouseLeftButtonDown"
                                            />
                                        <TextBlock
                                            x:Name="Caption"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Margin="4,0,0,0"
                                            FontFamily="Segoe UI"
                                            FontSize="12"
                                            Opacity="1"
                                            Foreground="White"
                                            Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Button
                                            Grid.Column="4"
                                            x:Name="CloseButton" 
                                            VerticalAlignment="Top"
                                            Margin="3"
                                            Width="18"
                                            Height="18"
                                            Style="{StaticResource VS2012WindowStyleTitleBarButton}"
                                            Click="CloseButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1.5"
                                                    Stretch="None"
                                                    Data="M0,0 L8,8 M0,8 L8,0"
                                                    />
                                            </Grid>
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter />
                            </DockPanel>
                        </Border>
                        <Line
                            MouseDown="OnSizeNorth"
                            x:Name="lnSizeNorth"
                            Stroke="Transparent"   
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="1"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeSouth"
                            x:Name="lnSizeSouth"
                            Stroke="Transparent"
                            VerticalAlignment="Bottom" 
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="{TemplateBinding ActualHeight}" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeWest"
                            x:Name="lnSizeWest"
                            Stroke="Transparent"
                            Cursor="SizeWE"
                            X1="1" X2="1" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeEast"
                            x:Name="lnSizeEast"
                            Stroke="Transparent"
                            HorizontalAlignment="Right" 
                            Cursor="SizeWE"
                            X1="{TemplateBinding ActualWidth}" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Rectangle MouseDown="OnSizeNorthWest" x:Name="rectSizeNorthWest" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeNorthEast" x:Name="rectSizeNorthEast" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Right" />
                        <Rectangle MouseDown="OnSizeSouthWest" x:Name="rectSizeSouthWest" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeSouthEast" x:Name="rectSizeSouthEast" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource VS2012WindowBorderBrushInactive}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Resources>
            <Style TargetType="{x:Type StatusBar}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource VS2012WindowStatusForeground}" />
                        <Setter Property="Background" Value="{StaticResource VS2012WindowBorderBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource VS2012WindowStatusForegroundInactive}" />
                        <Setter Property="Background" Value="{StaticResource VS2012WindowBorderBrushInactive}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>-->
    </Style>



    <!--#endregion-->


    <!--#region ************************* TREEVIEW ***************************************-->

    <!--TreeView Style-->
    <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Border" CornerRadius="1" BorderThickness="0">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="{StaticResource BorderDarkColor}" />
                        </Border.Background>
                        <ScrollViewer Focusable="False"
                        CanContentScroll="False"
                        Padding="4">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Collapsed">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Expanded">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Collapsed" 
                              HorizontalAlignment="Left" 
                              VerticalAlignment="Center" 
                              Margin="1,1,1,1" 
                              Data="M 4 0 L 8 4 L 4 8 Z">
                            <Path.Fill>
                                <SolidColorBrush Color="Black" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="Expanded" 
                              HorizontalAlignment="Left" 
                              VerticalAlignment="Center" 
                              Margin="1,1,1,1" 
                              Data="M 0 4 L 8 4 L 4 8 Z" 
                              Visibility="Hidden">
                            <Path.Fill>
                                <SolidColorBrush Color="Green" />
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0"
                     StrokeThickness="5"
                     Stroke="Black"
                     StrokeDashArray="1 2"
                     Opacity="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"  Value="{Binding Path=HorizontalContentAlignment,
            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, 
            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" 
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" 
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedInactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                                      ClickMode="Press" 
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border x:Name="Bd" Grid.Column="1" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header" 
                                              ContentSource="Header" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" 
                                        Grid.Row="1" 
                                        Grid.Column="1" 
                                        Grid.ColumnSpan="2" 
                                        Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="Blue"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion-->


    <!--#region *********************** OTHER *******************************-->

    <Style x:Key="textblock" TargetType="TextBlock">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="TextBlock.IsMouseOver" Value="True">
                <Setter Property="TextBlock.Foreground" Value="Black"/>
                <Setter Property="MenuItem.Background" Value="White"/>
                <Setter Property="MenuItem.BorderBrush" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Background" Value="Black"/>
    </Style>


    <Style TargetType="{x:Type ToolTip}" x:Key="tooltips">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>


    <Style x:Key="Button_FL" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Margin" Value="5,1,5,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="Transparent"
                            Width="20"
                            Height="20"
                            Opacity="0"
                            CornerRadius="10"
                            BorderThickness="0"/>
                        <Grid >
                            <ContentPresenter/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="PART_border" Property="Background" Value="white" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />-->
                            <Setter  Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="white" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="#FFF"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="FlatButtonControlTemplate" TargetType="{x:Type Button}">
        <Border x:Name="OuterBorder" BorderBrush="Gray" BorderThickness="1" CornerRadius="2" VerticalAlignment="Center">
            <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" />
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FF7CA0CC" />
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FFE4EFFD" />
                <Setter TargetName="InnerBorder" Property="Background" Value="#FFDAE7F5" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FF2E4E76" />
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FF116EE4" />
                <Setter TargetName="InnerBorder" Property="Background" Value="#FF3272B8" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="FlatToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="OuterBorder" BorderBrush="Gray" BorderThickness="1" CornerRadius="2" VerticalAlignment="Center">
            <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2" >
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FF7CA0CC" />
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FFE4EFFD" />
                <Setter TargetName="InnerBorder" Property="Background" Value="#FFDAE7F5" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FF2E4E76" />
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FF116EE4" />
                <Setter TargetName="InnerBorder" Property="Background" Value="#FF3272B8" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Black" />
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FFFFC00A" />
                <Setter TargetName="InnerBorder" Property="Background" Value="#FFFFD458" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--#endregion-->



    <!--#region ******************* GRIDVIEW, LISTVIEW ****************************-->

    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden"
                          Focusable="false">
                                <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                          Columns="{Binding Path=TemplatedParent.View.Columns,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContainerStyle="{Binding
                Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplate="{Binding
                Path=TemplatedParent.View.ColumnHeaderTemplate,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplateSelector="{Binding 
                Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          AllowsColumnReorder="{Binding
                Path=TemplatedParent.View.AllowsColumnReorder,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContextMenu="{Binding
                Path=TemplatedParent.View.ColumnHeaderContextMenu,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderToolTip="{Binding
                Path=TemplatedParent.View.ColumnHeaderToolTip,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          SnapsToDevicePixels="{TemplateBinding
                SnapsToDevicePixels}" />
                            </ScrollViewer>

                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Local"
                                    CanContentScroll="True"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False" />
                        </DockPanel>

                        <ScrollBar Name="PART_HorizontalScrollBar"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Value="{TemplateBinding HorizontalOffset}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                        <ScrollBar Name="PART_VerticalScrollBar"
                     Grid.Column="1"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Value="{TemplateBinding VerticalOffset}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width"
          Value="18" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0"
                           EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="{DynamicResource BorderLightColor}"
                          Offset="0.0" />
                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                          Offset="1.0" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0" />
                    <GradientStop Color="White" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type GridViewColumnHeader}"
       TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="HeaderBorder">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="Wheat" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="HeaderBorder"
                  BorderThickness="0,1,0,1"
                  Padding="2,0,2,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                  Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                  Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}"
                                  Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}"
                                  Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.Background>
                            <ContentPresenter x:Name="HeaderContent"
                              Margin="0,0,0,1"
                              RecognizesAccessKey="True"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                 HorizontalAlignment="Right"
                 Margin="0,0,-9,0"
                 Style="{StaticResource GridViewColumnHeaderGripper}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#60000000"
                         Width="{TemplateBinding ActualWidth}"
                         Height="{TemplateBinding ActualHeight}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder"
                    BorderThickness="0,1,0,1">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                </Border.Background>
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource BorderLightColor}"
                                    Offset="0.0" />
                                                <GradientStop Color="{DynamicResource BorderDarkColor}"
                                    Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ListView}" TargetType="ListView">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" BorderThickness="0">
                        <Border.Background>
                            <SolidColorBrush Color="{StaticResource BorderDarkColor}" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="Height" Value="20"/>-->
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Background" Value="Transparent"/>
                <!--<Setter Property="Foreground" Value="Blue"/>-->
                <Setter Property="FontSize" Value="14"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <!--<Setter Property="Foreground" Value="Green"/>-->
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False" >
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="12"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--#endregion-->



    <!--#region ************************MENU MENUITEM CONTEXTMENU ******************************-->


    <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderThickness="0">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="Black"/>
                            <!--<LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource ControlLightColor}"
                            Offset="0" />
                                <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1" />
                            </LinearGradientBrush>-->
                        </Border.Background>
                        <StackPanel ClipToBounds="True"
                      Orientation="Horizontal"
                      IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
        <Setter Property="Height"
          Value="1" />
        <Setter Property="Margin"
          Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Column="1" BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ScrollContentPresenter />
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                     Value="{TemplateBinding VerticalOffset}"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Grid.Column="1"
                     Value="{TemplateBinding HorizontalOffset}"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="5,1,5,1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <Popup x:Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Slide">
                    <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="0"
                Background="Black">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Black"/>
                        </Border.BorderBrush>
                        <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}" VerticalScrollBarVisibility="Hidden">
                            <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="Slide" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="Black"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="0,0,4,4" />
                <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,0,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="10,3,10,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{StaticResource ControlLightColor}" />
                                    <GradientStop Color="{StaticResource ControlMouseOverColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
          BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                <Border x:Name="Check"
              Width="13"
              Height="13"
              Visibility="Collapsed"
              Margin="5,1,5,1"
              BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                              Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Path x:Name="CheckMark"
              Width="7"
              Height="7"
              Visibility="Hidden"
              SnapsToDevicePixels="False"
              StrokeThickness="2"
              Data="M 0 0 L 7 7 M 0 7 L 7 0">
                        <Path.Stroke>
                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                        </Path.Stroke>
                    </Path>
                </Border>
                <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,0,2"
                 DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />
            <Trigger Property="Icon"
             Value="{x:Null}">
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked"
             Value="true">
                <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable"
             Value="true">
                <Setter TargetName="Check"
              Property="Visibility"
              Value="Visible" />
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="Transparent"
                          Offset="0" />
                            <GradientStop Color="{DynamicResource ControlMouseOverColor}"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource BorderMediumColor}"
                          Offset="0" />
                            <GradientStop Color="Transparent"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
          BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,2,2"
                 DockPanel.Dock="Right" />
                <Path x:Name="path" Grid.Column="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 0 7 L 4 3.5 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
                <Popup x:Name="Popup"
             Placement="Right"
             HorizontalOffset="0"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Slide">
                    <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                Background="Black"
                BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Black" />
                        </Border.BorderBrush>
                        <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}" VerticalScrollBarVisibility="Auto">
                            <StackPanel IsItemsHost="True" 
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"  Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Transparent" Offset="0" />
                            <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope"
              Value="true" />
            </Trigger>
            <Trigger Property="Role"
             Value="TopLevelItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
             Value="SubmenuItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ContextMenu Style-->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="Black" BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <StackPanel IsItemsHost="True"  KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,1,0,1" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Name="contextmenu" x:Key="mycontextmenu" DataContext="{StaticResource mycontextmenuviewmodel}">
        <MenuItem x:Name="copy" Header="{Binding Headers[0], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[0], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OnCopyButtonClick, UpdateSourceTrigger=PropertyChanged}"/>
        <MenuItem x:Name="copyimage"  Header="{Binding Headers[7], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[7], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OnCopyImageButtonClick, UpdateSourceTrigger=PropertyChanged}"/>
        <MenuItem x:Name="cut" Header="{Binding Headers[1], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[1], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OnCutButtonClick, UpdateSourceTrigger=PropertyChanged}"/>
        <MenuItem x:Name="cutimage"  Header="{Binding Headers[8], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[8], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OnCutImageButtonClick, UpdateSourceTrigger=PropertyChanged}"/>
        <MenuItem x:Name="paste" Header="{Binding Headers[2], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[2], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OnPasteButtonClick, UpdateSourceTrigger=PropertyChanged}"/>
        <MenuItem x:Name="pastetimagebefore"  Header="{Binding Headers[9], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[9], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OnPasteImageButtonClick, UpdateSourceTrigger=PropertyChanged}"
                      CommandParameter="before"/>
        <MenuItem x:Name="pastetimageafter"  Header="{Binding Headers[10], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[10], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OnPasteImageButtonClick, UpdateSourceTrigger=PropertyChanged}"
                      CommandParameter="after"/>
        <MenuItem x:Name="openforreading" Header="{Binding Headers[13], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[13], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OpenForReading, UpdateSourceTrigger=PropertyChanged}"
                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Control}, 
                      Mode=FindAncestor, AncestorLevel=1 }}"/>
        <MenuItem x:Name="openforediting" Header="{Binding Headers[14], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[14], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OpenForEditing, UpdateSourceTrigger=PropertyChanged}"
                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Control}, 
                      Mode=FindAncestor, AncestorLevel=1 }}"/>
        <MenuItem x:Name="delete" Header="{Binding Headers[3], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[3], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OnDeleteButtonClick, UpdateSourceTrigger=PropertyChanged}"/>
        <MenuItem x:Name="deleteimage" Header="{Binding Headers[11], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[11], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OnDeleteImageButtonClick, UpdateSourceTrigger=PropertyChanged}"/>
        <MenuItem x:Name="changeimage" Header="{Binding Headers[12], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[12], UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding OnChangeImageButtonClick, UpdateSourceTrigger=PropertyChanged}"/>
        <MenuItem x:Name="ink" Header="{Binding Headers[4], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[4], UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding MyColors, UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding Source={StaticResource mycontextmenuviewmodel}, Path=OnInkButtonClick}">
            <MenuItem.ItemTemplate>
                <DataTemplate>
                    <Border x:Name="border" Height="15" Width="100" CornerRadius="3" ToolTip="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                    Background="{Binding Path=. ,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource colorconvert}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction 
                                    Command="{Binding Source={StaticResource mycontextmenuviewmodel}, Path=OnInkButtonClick}"
                                    CommandParameter="{Binding ElementName=border, Path=Background, UpdateSourceTrigger=PropertyChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>
                </DataTemplate>
            </MenuItem.ItemTemplate>
        </MenuItem>
        <MenuItem x:Name="background" Header="{Binding Headers[5], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[5], UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding MyColors, UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding Source={StaticResource mycontextmenuviewmodel}, Path=OnBackgroundButtonClick}">
            <MenuItem.ItemTemplate>
                <DataTemplate>
                    <Border x:Name="border" Height="15" Width="100" CornerRadius="3" ToolTip="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                    Background="{Binding Path=. ,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource colorconvert}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding Source={StaticResource mycontextmenuviewmodel}, 
                                    Path=OnBackgroundButtonClick}" CommandParameter="{Binding ElementName=border, 
                                    Path=Background, UpdateSourceTrigger=PropertyChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>
                </DataTemplate>
            </MenuItem.ItemTemplate>
        </MenuItem>
        <MenuItem x:Name="paper" Header="{Binding Headers[6], UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding ToolTips[6], UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding MyColors, UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding Source={StaticResource mycontextmenuviewmodel}, Path=OnPaperButtonClick}">
            <MenuItem.ItemTemplate>
                <DataTemplate>
                    <Border x:Name="border" Height="15" Width="100" CornerRadius="3" ToolTip="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                    Background="{Binding Path=. ,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource colorconvert}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction 
                                    Command="{Binding Source={StaticResource mycontextmenuviewmodel}, Path=OnPaperButtonClick}"
                                    CommandParameter="{Binding ElementName=border, Path=Background, UpdateSourceTrigger=PropertyChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>
                </DataTemplate>
            </MenuItem.ItemTemplate>
        </MenuItem>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Opened">
                <i:InvokeCommandAction Command="{Binding MyContextMenuOpened,UpdateSourceTrigger=PropertyChanged}"
                                       CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Control}, Mode=FindAncestor,
                    AncestorLevel=1 }}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
    </ContextMenu>
    <!--#endregion-->



    <!--#region ******************* COMBOBOX ******************************* -->

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames 
                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlMouseOverColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledControlDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                (SolidColorBrush.Color)"
                                          Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledForegroundColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledBorderDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlPressedColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border"
            Grid.ColumnSpan="2"
            CornerRadius="5"
            BorderThickness="1">
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0,1"
                             StartPoint="0,0">
                        <GradientStop Color="{DynamicResource BorderLightColor}"
                        Offset="0" />
                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                        Offset="1" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource ControlLightColor}" />
                                <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border Grid.Column="0"
            CornerRadius="2,0,0,2"
            Margin="1" >
                <Border.Background>
                    <SolidColorBrush Color="Gray"/>
                    <!--<SolidColorBrush Color="{DynamicResource ControlLightColor}"/>-->
                </Border.Background>
            </Border>
            <Path x:Name="Arrow"
          Grid.Column="1"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 4 4 L 8 0 Z" >
                <Path.Fill>
                    <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                </Path.Fill>
            </Path>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" >
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}"
                        Grid.Column="2"
                        Focusable="false"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch">
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox"
                   Style="{x:Null}"
                   Template="{StaticResource ComboBoxTextBox}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Margin="3,1,3,1"
                   Focusable="True"
                   Background="Transparent"
                   Visibility="Hidden"
                   IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup"
                 Placement="Bottom"
                 IsOpen="{TemplateBinding IsDropDownOpen}"
                 AllowsTransparency="True"
                 Focusable="True"
                 PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                  SnapsToDevicePixels="True"
                  MinWidth="{TemplateBinding ActualWidth}"
                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <SolidColorBrush Color="Gray" />
                                        <!--<SolidColorBrush Color="{DynamicResource ControlLightColor}" />-->
                                    </Border.Background>
                                </Border>
                                <ScrollViewer Margin="4,2,4,2" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
</ResourceDictionary>
    